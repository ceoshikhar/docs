{
  "openapi": "3.0.3",
  "info": {
    "title": "Bodhveda Notifications API",
    "version": "1.0",
    "description": "API for sending notifications to recipients or broadcasting to all."
  },
  "paths": {
    "/v1/notifications/send": {
      "post": {
        "summary": "Send a notification (direct or broadcast)",
        "operationId": "sendNotification",
        "tags": ["Notifications"],
        "description": "Sends a notification to a specific recipient (direct) or to all recipients (broadcast).\n- **Direct**: `recipient_id` is set. `target` is optional.\n- **Broadcast**: `recipient_id` is null. `target` is **required**.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendNotificationPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendNotificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "APIKey"
      }
    },
    "schemas": {
      "SendNotificationPayload": {
        "type": "object",
        "properties": {
          "recipient_id": {
            "type": "string",
            "nullable": true,
            "description": "External ID of the recipient.\n- If null → this is a **broadcast** notification (all recipients).\n- If set → this is a **direct** notification to that recipient."
          },
          "target": {
            "$ref": "#/components/schemas/NotificationTarget"
          },
          "payload": {
            "type": "object",
            "description": "Arbitrary JSON payload for the notification."
          }
        },
        "required": ["payload"]
      },
      "NotificationTarget": {
        "type": "object",
        "description": "Destination and categorization details for the notification.",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Notification channel (e.g., \"email\", \"push\")."
          },
          "topic": {
            "type": "string",
            "description": "High-level grouping for the notification (e.g., \"billing\")."
          },
          "event": {
            "type": "string",
            "description": "Specific event name (e.g., \"invoice_due\")."
          }
        },
        "required": ["channel", "topic", "event"]
      },
      "SendNotificationResponse": {
        "type": "object",
        "description": "Response for send notification API.",
        "properties": {
          "message": {
            "type": "string"
          },
          "notification": {
            "$ref": "#/components/schemas/Notification"
          },
          "broadcast": {
            "$ref": "#/components/schemas/Broadcast"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "recipient_id": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "broadcast_id": {
            "type": "integer",
            "nullable": true
          },
          "channel": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "seen": {
            "type": "boolean"
          },
          "read": {
            "type": "boolean"
          },
          "opened": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Broadcast": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "project_id": {
            "type": "integer"
          },
          "payload": {
            "type": "object"
          },
          "channel": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "details": {
            "type": "string"
          }
        }
      }
    }
  }
}
